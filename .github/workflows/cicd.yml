name: CICD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    
    - name: Get Git Version
      uses: docker://gittools/gitversion:5.5.0-linux-alpine.3.10-x64-netcoreapp3.1
      with:
        args: /github/workspace /nofetch /exec /bin/sh /execargs "-c \"echo $GitVersion_ShortSha > /github/workspace/version.txt\""

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.3

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: Build
      run: |
        mkdir out
        cd cmd/stg
        go build -v -o ../../out .

    - name: Test
      run: |
        cd pkg
        go test -v ./...
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.sha }}
        release_name: Release ${{ github.sha }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./out/stg
        asset_name: stg
        asset_content_type: application/octet-stream
